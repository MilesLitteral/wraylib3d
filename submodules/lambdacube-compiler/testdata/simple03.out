Pipeline
  { info = ""
  , backend = OpenGL33
  , textures = []
  , samplers = []
  , targets =
      [ RenderTarget
          { renderTargets =
              [ TargetItem
                  { targetSemantic = Depth , targetRef = Just (Framebuffer Depth) }
              , TargetItem
                  { targetSemantic = Color , targetRef = Just (Framebuffer Color) }
              ]
          }
      ]
  , programs =
      [ Program
          { programUniforms = fromList [ ( "viewProj" , M44F ) ]
          , programStreams =
              fromList
                [ ( "vi1" , Parameter { name = "position" , ty = V3F } )
                , ( "vi2" , Parameter { name = "color" , ty = V3F } )
                ]
          , programInTextures = fromList []
          , programOutput = [ Parameter { name = "f0" , ty = V4F } ]
          , vertexShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform mat4 viewProj;
              in vec3 vi1;
              in vec3 vi2;
              smooth out vec4 vo1;
              vec4 v3FToV4F(vec3 z0) {
                  return vec4 ((z0).x,(z0).y,(z0).z,1.0);
              }
              void main() {
                  gl_Position = (viewProj) * (v3FToV4F (vi1));
                  vo1 = v3FToV4F (vi2);
              }
              """
          , geometryShader = Nothing
          , fragmentShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              smooth in vec4 vo1;
              out vec4 f0;
              void main() {
                  f0 = vec4 (1.0,1.0,1.0,1.0);
              }
              """
          }
      , Program
          { programUniforms = fromList [ ( "viewProj" , M44F ) ]
          , programStreams =
              fromList
                [ ( "vi1" , Parameter { name = "position" , ty = V3F } )
                , ( "vi2" , Parameter { name = "color" , ty = V3F } )
                ]
          , programInTextures = fromList []
          , programOutput = [ Parameter { name = "f0" , ty = V4F } ]
          , vertexShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              uniform mat4 viewProj;
              in vec3 vi1;
              in vec3 vi2;
              smooth out vec4 vo1;
              vec4 v3FToV4F(vec3 z0) {
                  return vec4 ((z0).x,(z0).y,(z0).z,1.0);
              }
              void main() {
                  gl_Position = (viewProj) * (v3FToV4F (vi1));
                  vo1 = v3FToV4F (vi2);
              }
              """
          , geometryShader = Nothing
          , fragmentShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              smooth in vec4 vo1;
              out vec4 f0;
              void main() {
                  f0 = vo1;
              }
              """
          }
      ]
  , slots =
      [ Slot
          { slotName = "missing shader"
          , slotStreams =
              fromList [ ( "color" , V3F ) , ( "position" , V3F ) ]
          , slotUniforms = fromList [ ( "viewProj" , M44F ) ]
          , slotPrimitive = Triangles
          , slotPrograms = [ 0 , 1 ]
          }
      ]
  , streams = []
  , commands =
      [ SetRenderTarget 0
      , ClearRenderTarget
          [ ClearImage { imageSemantic = Depth , clearValue = VFloat 1000.0 }
          , ClearImage
              { imageSemantic = Color , clearValue = VV4F (V4 0.0 0.0 0.4 1.0) }
          ]
      , SetProgram 1
      , SetRasterContext
          (TriangleCtx CullNone PolygonFill NoOffset FirstVertex)
      , SetAccumulationContext
          AccumulationContext
            { accViewportName = Nothing
            , accOperations =
                [ DepthOp Less True
                , ColorOp NoBlending (VV4B (V4 True True True True))
                ]
            }
      , RenderSlot 0
      , SetProgram 0
      , SetRasterContext
          (TriangleCtx
             CullNone (PolygonLine 20.0) (Offset (-1.0) 0.0) FirstVertex)
      , SetAccumulationContext
          AccumulationContext
            { accViewportName = Nothing
            , accOperations =
                [ DepthOp Lequal True
                , ColorOp NoBlending (VV4B (V4 True True True True))
                ]
            }
      , RenderSlot 0
      ]
  }