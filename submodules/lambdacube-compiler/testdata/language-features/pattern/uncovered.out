main is not found
------------ desugared source code
f
  = _lhs
    f
    \(a :: _) (b :: _) (c :: _) -> case'Bool
      (\(_ :: _) -> _)
      (case'Bool
        (\(_ :: _) -> _)
        (case'Bool (\(_ :: _) -> _) (_rhs undefined) (_rhs (fromInt 1)) c)
        (_rhs (fromInt 2))
        a)
      (case'Bool
        (\(_ :: _) -> _)
        (_rhs (fromInt 0))
        (case'Bool (\(_ :: _) -> _) (_rhs (fromInt 1)) (_rhs undefined) a)
        c)
      b

g
  = _lhs
    g
    \(a :: _) -> case'List
      (\(_ :: _) -> _)
      (_rhs undefined)
      (\(b :: _) (c :: _) -> case'Bool
        (\(_ :: _) -> _)
        (_rhs undefined)
        (case'List
          (\(_ :: _) -> _)
          (_rhs undefined)
          (\(d :: _) (e :: _) -> case'Bool
            (\(_ :: _) -> _)
            (case'List
              (\(_ :: _) -> _)
              (_rhs undefined)
              (\(f :: _) (g :: _) -> case'Bool
                (\(_ :: _) -> _)
                (_rhs undefined)
                (case'List
                  (\(_ :: _) -> _)
                  (_rhs False)
                  (\(_ :: _) (_ :: _) -> _rhs undefined)
                  g)
                f)
              e)
            (_rhs undefined)
            d)
          c)
        b)
      a

h
  = _lhs
    h
    \(a :: _) -> case'List
      (\(_ :: _) -> _)
      (_rhs undefined)
      (\(b :: _) (c :: _) -> case'List
        (\(_ :: _) -> _)
        (_rhs undefined)
        (\(d :: _) (e :: _) -> case'Bool
          (\(_ :: _) -> _)
          (_rhs undefined)
          (case'List
            (\(_ :: _) -> _)
            (case'List
              (\(_ :: _) -> _)
              (_rhs undefined)
              (\(f :: _) (g :: _) -> case'List
                (\(_ :: _) -> _)
                (_rhs undefined)
                (\(h :: _) (i :: _) -> case'Bool
                  (\(_ :: _) -> _)
                  (case'List
                    (\(_ :: _) -> _)
                    (case'List
                      (\(_ :: _) -> _)
                      (_rhs True)
                      (\(_ :: _) (_ :: _) -> _rhs undefined)
                      g)
                    (\(_ :: _) (_ :: _) -> _rhs undefined)
                    i)
                  (_rhs undefined)
                  h)
                f)
              c)
            (\(_ :: _) (_ :: _) -> _rhs undefined)
            e)
          d)
        b)
      a
------------ core code
f :: forall a . Num a => Bool -> Bool -> Bool -> a
f
  = \a b c d e -> case'Bool
    (\_ -> a)
    (case'Bool
      (\_ -> a)
      (case'Bool (\_ -> a) (_rhs (undefined a)) (_rhs (fromInt a b 1)) e)
      (_rhs (fromInt a b 2))
      c)
    (case'Bool
      (\_ -> a)
      (_rhs (fromInt a b 0))
      (case'Bool (\_ -> a) (_rhs (fromInt a b 1)) (_rhs (undefined a)) c)
      e)
    d

g :: [Bool] -> Bool
g
  = \a -> case'List
    (\_ -> 'Bool)
    (_rhs (undefined 'Bool))
    (\b c -> case'Bool
      (\_ -> 'Bool)
      (_rhs (undefined 'Bool))
      (case'List
        (\_ -> 'Bool)
        (_rhs (undefined 'Bool))
        (\d e -> case'Bool
          (\_ -> 'Bool)
          (case'List
            (\_ -> 'Bool)
            (_rhs (undefined 'Bool))
            (\f g -> case'Bool
              (\_ -> 'Bool)
              (_rhs (undefined 'Bool))
              (case'List (\_ -> 'Bool) (_rhs False) (\_ _ -> _rhs (undefined 'Bool)) g)
              f)
            e)
          (_rhs (undefined 'Bool))
          d)
        c)
      b)
    a

h :: [[Bool]] -> Bool
h
  = \a -> case'List
    (\_ -> 'Bool)
    (_rhs (undefined 'Bool))
    (\b c -> case'List
      (\_ -> 'Bool)
      (_rhs (undefined 'Bool))
      (\d e -> case'Bool
        (\_ -> 'Bool)
        (_rhs (undefined 'Bool))
        (case'List
          (\_ -> 'Bool)
          (case'List
            (\_ -> 'Bool)
            (_rhs (undefined 'Bool))
            (\f g -> case'List
              (\_ -> 'Bool)
              (_rhs (undefined 'Bool))
              (\h i -> case'Bool
                (\_ -> 'Bool)
                (case'List
                  (\_ -> 'Bool)
                  (case'List (\_ -> 'Bool) (_rhs True) (\_ _ -> _rhs (undefined 'Bool)) g)
                  (\_ _ -> _rhs (undefined 'Bool))
                  i)
                (_rhs (undefined 'Bool))
                h)
              f)
            c)
          (\_ _ -> _rhs (undefined 'Bool))
          e)
        d)
      b)
    a
------------ tooltips
2:1-2:2
    forall a . Num a => Bool -> Bool -> Bool -> a
2:18-2:19
    _b
2:18-3:19
    Bool -> _c | _c
2:18-4:19
    Bool -> _c
3:18-3:19
    _b | _b | _b | _c
3:18-4:19
    Bool -> _c | _b
4:18-4:19
    _b
6:1-6:2
    [Bool] -> Bool
6:25-6:30
    Bool | Bool | Bool | Bool | Bool | Bool | Bool
8:1-8:2
    [[Bool]] -> Bool
8:23-8:27
    Bool | Bool | Bool | Bool | Bool | Bool | Bool | Bool | Bool
------------ warnings
Uncovered pattern(s) at testdata/language-features/pattern/uncovered.lc:2:1:
f _ True False = 0
f False _ True = 1
f True False _ = 2
Missing case(s):
    f False False False
    f True True True
Uncovered pattern(s) at testdata/language-features/pattern/uncovered.lc:6:1:
g [True, False, True] = False
^
Missing case(s):
    g []
    g (False : _)
    g [True]
    g [True, False]
    g (True : False : False : _)
    g (True : False : True : _ : _)
    g (True : True : _)
Uncovered pattern(s) at testdata/language-features/pattern/uncovered.lc:8:1:
h [[True], [False]] = True
^
Missing case(s):
    h []
    h ([] : _)
    h ((False : _) : _)
    h [[True]]
    h ([True] : [] : _)
    h ([True] : [False] : _ : _)
    h ([True] : (False : _ : _) : _)
    h ([True] : (True : _) : _)
    h ((True : _ : _) : _)