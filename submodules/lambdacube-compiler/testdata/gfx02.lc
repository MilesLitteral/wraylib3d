main = let
  emptyFB           = FrameBuffer ((colorImage1 (V4 0.0 0.0 0.4 1.0)))
  rasterCtx         = TriangleCtx CullNone PolygonFill NoOffset LastVertex
  fragmentCtx       = accumulationContext ((ColorOp NoBlending (V4 True True True True)))
  vertexShader      = \((v)) -> (v, v)
  vertexStream      = fetch "stream4" ((Attribute "position4" :: Vec 4 Float))
  primitiveStream   = mapPrimitives vertexShader vertexStream
  fragmentStream    = rasterizePrimitives rasterCtx ((Smooth)) primitiveStream
  fragmentShader    = \((v)) -> ((v)) --(V4F 1.0 0.0 0.0 1.0)
  frame             = accumulate fragmentCtx fragmentShader fragmentStream emptyFB
 in ScreenOut frame
