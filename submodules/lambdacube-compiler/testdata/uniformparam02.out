Pipeline
  { info = ""
  , backend = OpenGL33
  , textures = []
  , samplers = []
  , targets =
      [ RenderTarget
          { renderTargets =
              [ TargetItem
                  { targetSemantic = Depth , targetRef = Just (Framebuffer Depth) }
              ]
          }
      ]
  , programs =
      [ Program
          { programUniforms = fromList []
          , programStreams =
              fromList
                [ ( "vi1" , Parameter { name = "position4" , ty = V4F } ) ]
          , programInTextures = fromList []
          , programOutput = []
          , vertexShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              in vec4 vi1;
              flat out vec4 vo1;
              void main() {
                  gl_Position = vi1;
                  vo1 = vi1;
              }
              """
          , geometryShader = Nothing
          , fragmentShader =
              """
              #version 330 core
              vec4 texture2D(sampler2D s,vec2 uv) {
                  return texture(s,uv);
              }
              flat in vec4 vo1;
              void main() {
                  
              }
              """
          }
      ]
  , slots =
      [ Slot
          { slotName = "stream4"
          , slotStreams = fromList [ ( "position4" , V4F ) ]
          , slotUniforms = fromList []
          , slotPrimitive = Lines
          , slotPrograms = [ 0 ]
          }
      ]
  , streams = []
  , commands =
      [ SetRenderTarget 0
      , ClearRenderTarget
          [ ClearImage { imageSemantic = Depth , clearValue = VFloat 1000.0 }
          ]
      , SetProgram 0
      , SetRasterContext (LineCtx 1.0 LastVertex)
      , SetAccumulationContext
          AccumulationContext
            { accViewportName = Nothing
            , accOperations = [ DepthOp Less False ]
            }
      , RenderSlot 0
      ]
  }