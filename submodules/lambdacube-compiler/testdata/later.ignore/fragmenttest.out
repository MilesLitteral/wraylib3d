Pipeline {backend = WebGL1, textures = [], samplers = [], targets = [RenderTarget {renderTargets = [TargetItem {targetSemantic = Color, targetRef = Just (Framebuffer Color)}]}], programs = [Program {programUniforms = fromList [], programStreams = fromList [("v",Parameter {name = "position", ty = V2F})], programInTextures = fromList [], programOutput = [Parameter {name = "f0", ty = V4F}], vertexShader = "#version 100\nprecision highp float;\nprecision highp int;\nattribute vec2 v ;\nvarying vec2 v0 ;\nvoid main() {\nv0 = v;\ngl_Position = vec4 ( ( v ).x,( v ).y,1.0,1.0 );\ngl_PointSize = 1.0;\n}\n", geometryShader = Nothing, fragmentShader = "#version 100\nprecision highp float;\nprecision highp int;\nvarying vec2 v0 ;\nvoid main() {\ngl_FragColor = ( ( ( ( v0 ).x ) * ( ( v0 ).x ) ) + ( ( ( v0 ).y ) * ( ( v0 ).y ) ) ) > ( 0.5 ) ? vec4 ( 0.0,0.0,1.0,1.0 ) : vec4 ( 0.0,0.5,0.0,1.0 );\n}\n"}], slots = [Slot {slotName = "quad", slotStreams = fromList [("position",V2F)], slotUniforms = fromList [], slotPrimitive = Triangles, slotPrograms = [0]}], streams = [], commands = [SetRenderTarget 0,ClearRenderTarget [ClearImage {imageSemantic = Color, clearValue = VV4F (V4 1.0 0.0 0.0 0.5)}],SetProgram 0,SetRasterContext (TriangleCtx CullNone PolygonFill NoOffset LastVertex),SetAccumulationContext (AccumulationContext {accViewportName = Nothing, accOperations = [ColorOp NoBlending (VV4B (V4 True True True True))]}),RenderSlot 0]}