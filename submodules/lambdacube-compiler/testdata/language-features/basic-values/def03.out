main is not found
------------ desugared source code
fun
  = _lhs
    fun
    \(a :: _) -> case'Bool
      (\(_ :: _) -> _)
      (case'Bool (\(_ :: _) -> _) (_rhs undefined) (_rhs '2') (fromInt 2 == a))
      (_rhs '1')
      (fromInt 1 == a)
------------ core code
fun :: forall a . (Eq a, Num a, Eq a, Num a) => a -> Char
fun
  = \a b c d e f -> case'Bool
    (\_ -> 'Char)
    (case'Bool
      (\_ -> 'Char)
      (_rhs (undefined 'Char))
      (_rhs '2')
      ((a == b) (fromInt a c 2) f))
    (_rhs '1')
    ((a == d) (fromInt a e 1) f)
------------ tooltips
1:1-1:4
    forall a . (Eq a, Num a, Eq a, Num a) => a -> Char
1:9-1:12
    Char
1:9-2:12
    Bool -> Char
2:9-2:12
    Char | Char
------------ warnings
Uncovered pattern(s) at testdata/language-features/basic-values/def03.lc:1:1:
fun 1 = '1'
fun 2 = '2'
Missing case(s):
    fun _ | False <- fromInt 1 == _a, False <- fromInt 2 == _a